name: TNG Build

on:
  push:
    branches: ["master", "aqtion"]
  pull_request:
  workflow_dispatch:

env:
  LIN64_DIST_DIR: "linux-x64-tng"
  LINARM64_DIST_DIR: "linux-arm64-tng"
  WIN64_DIST_DIR: "windows-x64-tng"
  WIN32_DIST_DIR: "windows-i386-tng"
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  x86_build_tng:
    runs-on: [self-hosted, x86]
    steps:
      - name: 'Cleanup build folder'
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - uses: actions/checkout@v3
        with:
          # repository: aq2-tng/aq2-tng  ## Official repository
          repository: actionquake/aq2-tng
          ref: ${{ github.ref }}
          path: build

      - uses: actions/checkout@v3
        with:
          repository: actionquake/distrib
          path: config

      - name: Get version info for tng
        id: version
        run: |
          cp config/build/getversion.sh build/
          cd build && bash -x getversion.sh tng >> versions

      - name: Set shortversion
        id: shortversion
        working-directory: build
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Download mingw package
        working-directory: build
        run: |
          wget -nv https://github.com/skullernet/q2pro-mgw-sdk/releases/download/2022-06-14/q2pro-mgw-sdk.tar.gz
          tar xf q2pro-mgw-sdk.tar.gz

      - name: Build TNG (Win 64-bit)
        working-directory: build/source
        run: make -j4 V=1 && mv gamex86_64.dll ../gamex86_64.dll
        env:
          TNG_BUILD_FOR: "WIN64"
          USE_AQTION: "TRUE"

      - name: Generate Win64 archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-win-64
          path: |
            build/gamex86_64.dll
            build/versions

      - name: Build TNG (Win 32-bit)
        working-directory: build/source
        run: make clean && make -j4 V=1 && mv gamex86.dll ../gamex86.dll
        env:
          TNG_BUILD_FOR: "WIN32"
          USE_AQTION: "TRUE"

      - name: Generate Win32 archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-win-32
          path: |
            build/gamex86.dll
            build/versions

      - name: Build TNG (Linux 64-bit)
        working-directory: build/source
        run: make clean && make -j4 V=1 && mv gamex86_64.so ../gamex86_64.so
        env:
          CC: "gcc"
          USE_AQTION: "TRUE"

      - name: Generate Linux x86 archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-lin-x86_64
          path: |
            build/gamex86_64.so
            build/versions

  arm64_build_tng:
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: actionquake/aq2-tng
          ref: ${{ github.ref }}
          path: build

      - uses: actions/checkout@v3
        with:
          repository: actionquake/distrib
          path: config

      - name: Get version info for tng
        id: version
        run: |
          cp config/build/getversion.sh build/
          cd build && bash -x getversion.sh tng >> versions

      - name: Build TNG (Linux ARM64)
        working-directory: build/source
        run: make -j4 V=1 && mv gameaarch64.so ../gameaarch64.so
        env:
          CC: "gcc"
          USE_AQTION: "TRUE"

      - name: Generate archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-lin-arm64
          path: |
            build/gameaarch64.so
            build/versions

  darwin_build_tng:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: actionquake/aq2-tng
          ref: ${{ github.ref }}
          path: build

      - uses: actions/checkout@v3
        with:
          repository: actionquake/distrib
          path: config

      - name: Get version info for tng
        id: version
        run: |
          cp config/build/getversion.sh build/
          cd build && bash -x getversion.sh tng >> versions

      - name: Install dependencies
        run: |
          brew install curl ossp-uuid

      - name: Build TNG (Darwin x86_64)
        working-directory: build/source
        run: make -j4 V=1 && mv gamex86_64.dylib ../gamex86_64.dylib
        env:
          CC: "gcc"
          USE_AQTION: "TRUE"
          TNG_BUILD_FOR: "DARWIN"

      - name: Generate archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-darwin-x86_64
          path: |
            build/gamex86_64.dylib
            build/versions

      - name: Build TNG (Darwin ARM64)
        working-directory: build/source
        run: make clean && make -j4 V=1 && mv gamearm.dylib ../gamearm64.dylib
        env:
          USE_AQTION: "TRUE"
          TNG_BUILD_FOR: "M1"

      - name: Generate archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-darwin-arm64
          path: |
            build/gamearm64.dylib
            build/versions
